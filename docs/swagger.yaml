basePath: /api
definitions:
  controllers.CallActionRequest:
    properties:
      action:
        type: string
      call_id:
        type: string
      reason:
        type: string
    required:
    - action
    - call_id
    type: object
  controllers.CallFeedbackRequest:
    properties:
      comment:
        description: 可选评论
        example: 通话质量良好，声音清晰
        type: string
      issues:
        description: 问题描述
        example: 偶尔有一点延迟
        type: string
      rating:
        description: 1-5 星评分
        example: 4
        maximum: 5
        minimum: 1
        type: integer
    required:
    - rating
    type: object
  controllers.CallInfo:
    properties:
      action:
        type: string
      call_id:
        type: string
      reason:
        type: string
      timestamp:
        type: integer
    type: object
  controllers.CallRequest:
    properties:
      device_id:
        type: string
      resident_id:
        type: string
    required:
    - device_id
    - resident_id
    type: object
  controllers.CallSessionResponse:
    properties:
      call_id:
        type: string
      device_id:
        type: string
      last_activity:
        type: string
      resident_id:
        type: string
      start_time:
        type: string
      status:
        type: string
      tencen_rtc:
        $ref: '#/definitions/controllers.TRTCInfo'
    type: object
  controllers.CreateAdminRequest:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: Admin@123
        type: string
      phone:
        example: "13800138000"
        type: string
      username:
        example: admin123
        type: string
    required:
    - email
    - password
    - phone
    - username
    type: object
  controllers.CreateStaffRequest:
    type: object
  controllers.DeviceHealthRequest:
    properties:
      device_id:
        example: "1"
        type: string
    required:
    - device_id
    type: object
  controllers.DeviceRequest:
    type: object
  controllers.EmergencyAlarmRequest:
    properties:
      description:
        example: 火灾警报被触发，疑似厨房起火
        type: string
      location:
        example: Building A, Floor 3
        type: string
      property_id:
        description: 物业ID
        example: 1
        type: integer
      reported_by:
        description: 报告人ID
        example: 1
        type: integer
      type:
        description: 如：fire(火灾)、intrusion(入侵)、medical(医疗)等
        example: fire
        type: string
    required:
    - location
    - property_id
    - type
    type: object
  controllers.EmergencyNotificationRequest:
    properties:
      content:
        example: A栋3楼发生火灾，请所有居民立即疏散。
        type: string
      expires_at:
        description: 可选，不提供则默认24小时
        example: "2023-07-01T15:00:00Z"
        type: string
      is_public:
        description: 是否为公开通知
        example: false
        type: boolean
      property_id:
        description: 关联的物业ID，可以为空表示全局通知
        example: 1
        type: integer
      severity:
        description: high, medium, low
        example: high
        type: string
      target_type:
        description: all, residents, staff
        example: all
        type: string
      title:
        example: 紧急通知：小区火灾警报
        type: string
    required:
    - content
    - severity
    - title
    type: object
  controllers.EmergencyUnlockRequest:
    properties:
      reason:
        example: 火灾疏散
        type: string
    required:
    - reason
    type: object
  controllers.EndCallSessionRequest:
    properties:
      call_id:
        type: string
      reason:
        type: string
    required:
    - call_id
    type: object
  controllers.ErrorResponse:
    properties:
      code:
        example: 401
        type: integer
      data: {}
      message:
        example: Invalid username or password
        type: string
    type: object
  controllers.GetUserSigRequest:
    properties:
      user_id:
        example: user123
        type: string
    required:
    - user_id
    type: object
  controllers.InitiateCallRequest:
    properties:
      device_device_id:
        description: 使用与MQTT通讯中相同的字段名
        type: string
      target_resident_id:
        description: 使用与MQTT通讯中相同的字段名
        type: string
    required:
    - device_device_id
    - target_resident_id
    type: object
  controllers.InitiateCallResponse:
    properties:
      call_id:
        type: string
      call_info:
        $ref: '#/definitions/controllers.CallInfo'
      device_device_id:
        type: string
      target_resident_ids:
        items:
          type: string
        type: array
      tencen_rtc:
        $ref: '#/definitions/controllers.TRTCInfo'
      timestamp:
        type: integer
    type: object
  controllers.LoginData:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      role:
        example: admin
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user_id:
        example: 1
        type: integer
      username:
        example: admin
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      password:
        example: admin123
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginResponse:
    properties:
      code:
        example: 0
        type: integer
      data: {}
      message:
        example: Login successful
        type: string
    type: object
  controllers.PublishDeviceStatusRequest:
    properties:
      battery:
        type: integer
      device_id:
        type: string
      online:
        type: boolean
      properties:
        additionalProperties: true
        type: object
    required:
    - device_id
    type: object
  controllers.PublishSystemMessageRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      level:
        type: string
      message:
        type: string
      type:
        type: string
    required:
    - level
    - message
    - type
    type: object
  controllers.ResidentRequest:
    properties:
      device_id:
        example: 101
        type: integer
      email:
        example: zhangsan@resident.com
        type: string
      name:
        example: 张三
        type: string
      phone:
        example: "13812345678"
        type: string
    required:
    - device_id
    - name
    - phone
    type: object
  controllers.TRTCInfo:
    properties:
      room_id:
        type: string
      room_id_type:
        type: string
      sdk_app_id:
        type: integer
      user_id:
        type: string
      user_sig:
        type: string
    type: object
  controllers.TencentCallRequest:
    properties:
      device_id:
        type: string
      resident_id:
        type: string
    required:
    - device_id
    - resident_id
    type: object
  controllers.TokenRequest:
    properties:
      channel_id:
        example: room123
        type: string
      user_id:
        example: user456
        type: string
    required:
    - channel_id
    - user_id
    type: object
  controllers.UpdateAdminRequest:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: NewPassword@123
        type: string
      phone:
        example: "13800138000"
        type: string
    type: object
  controllers.UpdateResidentRequest:
    properties:
      device_id:
        example: 102
        type: integer
      email:
        example: lisi@resident.com
        type: string
      name:
        example: 李四
        type: string
      phone:
        example: "13987654321"
        type: string
    type: object
  controllers.UpdateStaffRequest:
    type: object
  models.AccessLog:
    properties:
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        type: integer
      id:
        type: integer
      method:
        $ref: '#/definitions/models.AccessMethod'
      resident:
        $ref: '#/definitions/models.Resident'
      resident_id:
        type: integer
      result:
        $ref: '#/definitions/models.AccessResult'
      timestamp:
        type: string
    type: object
  models.AccessMethod:
    enum:
    - remote
    - code
    - face
    - fingerprint
    type: string
    x-enum-varnames:
    - AccessMethodRemote
    - AccessMethodCode
    - AccessMethodFace
    - AccessMethodFingerprint
  models.AccessResult:
    enum:
    - success
    - failure
    type: string
    x-enum-varnames:
    - AccessResultSuccess
    - AccessResultFailure
  models.CallRecord:
    properties:
      call_status:
        $ref: '#/definitions/models.CallStatus'
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        type: integer
      duration:
        description: 通话时长
        type: integer
      id:
        type: integer
      resident:
        $ref: '#/definitions/models.Resident'
      resident_id:
        type: integer
      timestamp:
        description: 通话开始时间
        type: string
    type: object
  models.CallStatus:
    enum:
    - answered
    - missed
    - timeout
    type: string
    x-enum-varnames:
    - CallStatusAnswered
    - CallStatusMissed
    - CallStatusTimeout
  models.Device:
    properties:
      access_logs:
        items:
          $ref: '#/definitions/models.AccessLog'
        type: array
      call_records:
        items:
          $ref: '#/definitions/models.CallRecord'
        type: array
      created_at:
        type: string
      emergency_logs:
        items:
          $ref: '#/definitions/models.EmergencyLog'
        type: array
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      resident:
        $ref: '#/definitions/models.Resident'
      serial_number:
        type: string
      staff:
        description: Relations - 多对多关系
        items:
          $ref: '#/definitions/models.PropertyStaff'
        type: array
      status:
        $ref: '#/definitions/models.DeviceStatus'
      updated_at:
        type: string
    type: object
  models.DeviceStatus:
    enum:
    - online
    - offline
    - fault
    type: string
    x-enum-varnames:
    - DeviceStatusOnline
    - DeviceStatusOffline
    - DeviceStatusFault
  models.EmergencyLog:
    properties:
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        type: integer
      id:
        type: integer
      resident:
        $ref: '#/definitions/models.Resident'
      resident_id:
        type: integer
      resolved_at:
        description: 可空字段
        type: string
      status:
        $ref: '#/definitions/models.EmergencyStatus'
      triggered_at:
        type: string
    type: object
  models.EmergencyStatus:
    enum:
    - pending
    - responded
    - escalated
    - resolved
    type: string
    x-enum-varnames:
    - EmergencyStatusPending
    - EmergencyStatusResponded
    - EmergencyStatusEscalated
    - EmergencyStatusResolved
  models.PropertyStaff:
    properties:
      created_at:
        type: string
      devices:
        description: 关联关系 - 使用多对多关系替代直接关联
        items:
          $ref: '#/definitions/models.Device'
        type: array
      id:
        type: integer
      phone:
        type: string
      position:
        type: string
      property_name:
        type: string
      remark:
        type: string
      role:
        description: manager, staff, etc.
        type: string
      status:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.Resident:
    properties:
      access_logs:
        items:
          $ref: '#/definitions/models.AccessLog'
        type: array
      call_records:
        items:
          $ref: '#/definitions/models.CallRecord'
        type: array
      created_at:
        type: string
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        description: One-to-one relationship with Device
        type: integer
      email:
        type: string
      emergency_logs:
        items:
          $ref: '#/definitions/models.EmergencyLog'
        type: array
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:20033
info:
  contact:
    email: support@yourcompany.com
    name: API Support
    url: http://www.yourcompany.com/support
  description: A comprehensive door access management system with video calling capabilities
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ILock HTTP Service API
  version: "1.0"
paths:
  /admins:
    get:
      consumes:
      - application/json
      description: Get a list of all admin users with pagination
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      - description: Search keyword for username, phone, etc.
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Admin List
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create a new admin user
      parameters:
      - description: Admin information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateAdminRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Admin
      tags:
      - Admin
  /admins/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an admin user with the specified ID
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Admin
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Get details of a specific admin by ID
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Admin By ID
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update an existing admin user
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated admin information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Admin
      tags:
      - Admin
  /api/rtc/call:
    post:
      consumes:
      - application/json
      description: Initiate a video call between a device and a resident
      parameters:
      - description: Call request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Start Video Call
      tags:
      - RTC
  /api/rtc/token:
    post:
      consumes:
      - application/json
      description: Get a RTC token for real-time communication
      parameters:
      - description: Token request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get RTC Token
      tags:
      - RTC
  /auth/login:
    post:
      consumes:
      - application/json
      description: Process user login and return JWT token with different permissions
        based on user role
      parameters:
      - description: Login request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with token
          schema:
            allOf:
            - $ref: '#/definitions/controllers.LoginResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.LoginData'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: User Login
      tags:
      - Auth
  /calls:
    get:
      consumes:
      - application/json
      description: Get a list of all call records in the system, with pagination
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Call Records
      tags:
      - CallRecord
  /calls/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a specific call record by ID
      parameters:
      - description: Call Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Call Record By ID
      tags:
      - CallRecord
  /calls/{id}/feedback:
    post:
      consumes:
      - application/json
      description: Submit quality feedback for a specific call record
      parameters:
      - description: Call Record ID
        in: path
        name: id
        required: true
        type: integer
      - description: Feedback information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CallFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Submit Call Feedback
      tags:
      - CallRecord
  /calls/device/{deviceId}:
    get:
      consumes:
      - application/json
      description: Get call records for a specific device, with pagination
      parameters:
      - description: Device ID
        in: path
        name: deviceId
        required: true
        type: integer
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Device Call Records
      tags:
      - CallRecord
  /calls/resident/{residentId}:
    get:
      consumes:
      - application/json
      description: Get call records for a specific resident, with pagination
      parameters:
      - description: Resident ID
        in: path
        name: residentId
        required: true
        type: integer
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Resident Call Records
      tags:
      - CallRecord
  /calls/statistics:
    get:
      consumes:
      - application/json
      description: Get call statistics including total, answered, missed, etc.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Call Statistics
      tags:
      - CallRecord
  /device/status:
    post:
      consumes:
      - application/json
      description: 设备用于报告在线状态的简单健康检测接口
      parameters:
      - description: 设备健康检测请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.DeviceHealthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 设备健康检测
      tags:
      - device
  /devices:
    get:
      consumes:
      - application/json
      description: 获取所有设备的列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Device'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取所有设备
      tags:
      - device
    post:
      consumes:
      - application/json
      description: 创建一个新的门禁设备
      parameters:
      - description: 设备信息
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/controllers.DeviceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 创建新设备
      tags:
      - device
  /devices/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除设备
      parameters:
      - description: 设备ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 删除设备
      tags:
      - device
    get:
      consumes:
      - application/json
      description: 根据ID获取设备信息
      parameters:
      - description: 设备ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取单个设备
      tags:
      - device
    put:
      consumes:
      - application/json
      description: 根据ID更新设备信息
      parameters:
      - description: 设备ID
        in: path
        name: id
        required: true
        type: string
      - description: 设备信息
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/controllers.DeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 更新设备信息
      tags:
      - device
  /devices/{id}/status:
    get:
      consumes:
      - application/json
      description: Get the current status of a device by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Device Status
      tags:
      - device
  /emergency/alarm:
    post:
      consumes:
      - application/json
      description: Trigger an emergency alarm and notify relevant personnel
      parameters:
      - description: Alarm request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EmergencyAlarmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Trigger Emergency Alarm
      tags:
      - Emergency
  /emergency/contacts:
    get:
      consumes:
      - application/json
      description: Get a list of all emergency contacts in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Emergency Contacts
      tags:
      - Emergency
  /emergency/notify-all:
    post:
      consumes:
      - application/json
      description: Send notification to all users during an emergency
      parameters:
      - description: Notification request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EmergencyNotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Notify All Users
      tags:
      - Emergency
  /emergency/unlock-all:
    post:
      consumes:
      - application/json
      description: Unlock all doors in the system during an emergency
      parameters:
      - description: Unlock request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EmergencyUnlockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Emergency Unlock All Doors
      tags:
      - Emergency
  /mqtt/call:
    post:
      consumes:
      - application/json
      description: Start a new call via MQTT to all residents associated with the
        device
      parameters:
      - description: Call initiation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.InitiateCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.InitiateCallResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Initiate MQTT Call
      tags:
      - MQTT
  /mqtt/controller/device:
    post:
      consumes:
      - application/json
      description: Process device side call actions (hangup, cancelled)
      parameters:
      - description: Device call action request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CallActionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Handle MQTT Caller Action
      tags:
      - MQTT
  /mqtt/controller/resident:
    post:
      consumes:
      - application/json
      description: Process resident side call actions (answered, rejected, hangup,
        timeout)
      parameters:
      - description: Resident call action request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CallActionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Handle MQTT Callee Action
      tags:
      - MQTT
  /mqtt/device/status:
    post:
      consumes:
      - application/json
      description: 更新设备状态信息，包括在线状态、电池电量和其他自定义属性，无需MQTT连接
      parameters:
      - description: 设备状态信息：包含设备ID、在线状态、电池电量等
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.PublishDeviceStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update Device Status
      tags:
      - Device
  /mqtt/end-session:
    post:
      consumes:
      - application/json
      description: Forcefully end a call session and notify all parties
      parameters:
      - description: End call session request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EndCallSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: End MQTT Call Session
      tags:
      - MQTT
  /mqtt/session:
    get:
      consumes:
      - application/json
      description: Retrieve call session information with TRTC details
      parameters:
      - description: Call session ID
        in: query
        name: call_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CallSessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get MQTT Call Session
      tags:
      - MQTT
  /mqtt/system/message:
    post:
      consumes:
      - application/json
      description: Publish system message via MQTT
      parameters:
      - description: System message information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.PublishSystemMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Publish System Message
      tags:
      - MQTT
  /residents:
    get:
      consumes:
      - application/json
      description: Get a list of all residents in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Resident List
      tags:
      - Resident
    post:
      consumes:
      - application/json
      description: Create a new resident account, requiring association with a specific
        device
      parameters:
      - description: Resident information - name, phone and device ID are required,
          email is optional
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ResidentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success response with created resident details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request, device not found or phone number already in use
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Resident
      tags:
      - Resident
  /residents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a resident with the specified ID
      parameters:
      - description: Resident ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Resident
      tags:
      - Resident
    get:
      consumes:
      - application/json
      description: Get details of a specific resident by ID
      parameters:
      - description: Resident ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Resident By ID
      tags:
      - Resident
    put:
      consumes:
      - application/json
      description: Update details of a resident with the specified ID
      parameters:
      - description: Resident ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated resident information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateResidentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Resident
      tags:
      - Resident
  /staffs:
    get:
      consumes:
      - application/json
      description: Get a list of all property staff members, with pagination and search
        support
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      - description: Search keyword for name, phone, etc.
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Property Staff List
      tags:
      - Staff
    post:
      consumes:
      - application/json
      description: Create a new property staff member
      parameters:
      - description: Property staff information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateStaffRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Property Staff
      tags:
      - Staff
  /staffs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a property staff member with the specified ID
      parameters:
      - description: Property Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Property Staff
      tags:
      - Staff
    get:
      consumes:
      - application/json
      description: Get details of a specific property staff member by ID
      parameters:
      - description: Property Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Property Staff By ID
      tags:
      - Staff
    put:
      consumes:
      - application/json
      description: Update an existing property staff member
      parameters:
      - description: Property Staff ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated property staff information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateStaffRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Property Staff
      tags:
      - Staff
  /staffs/with-devices:
    get:
      consumes:
      - application/json
      description: Get a list of all property staff members with their associated
        devices
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      - description: Search keyword for name, phone, etc.
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Property Staff List With Devices
      tags:
      - Staff
  /trtc/call:
    post:
      consumes:
      - application/json
      description: Initiate a Tencent Cloud video call between a device and a resident
      parameters:
      - description: Call request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.TencentCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Start Tencent Video Call
      tags:
      - TencentRTC
  /trtc/usersig:
    post:
      consumes:
      - application/json
      description: Get a UserSig credential for Tencent Cloud real-time communication
      parameters:
      - description: UserSig request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.GetUserSigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get Tencent TRTC UserSig
      tags:
      - TencentRTC
securityDefinitions:
  BearerAuth:
    description: 'Enter the token with the `Bearer: ` prefix'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
