{
  "schemes": [],
  "swagger": "2.0",
  "info": {
      "description": "A comprehensive door access management system with video calling capabilities",
      "title": "ILock HTTP Service API",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
          "name": "API Support",
          "url": "http://www.yourcompany.com/support",
          "email": "support@yourcompany.com"
      },
      "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0"
  },
  "host": "39.108.49.167:20033",
  "basePath": "/api",
  "paths": {
      "/admins": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "分页获取所有管理员用户列表",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Admin"
              ],
              "summary": "获取管理员列表",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "页码, 默认为1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "每页条数, 默认为10",
                      "name": "page_size",
                      "in": "query"
                  },
                  {
                      "type": "string",
                      "description": "搜索关键词(用户名、电话等)",
                      "name": "search",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "创建一个新的管理员用户",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Admin"
              ],
              "summary": "创建管理员",
              "parameters": [
                  {
                      "description": "管理员信息",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.CreateAdminRequest"
                      }
                  }
              ],
              "responses": {
                  "201": {
                      "description": "Created",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/admins/{id}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "根据ID获取特定管理员的详细信息",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Admin"
              ],
              "summary": "获取管理员详情",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "管理员ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "put": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "更新现有管理员用户的信息",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Admin"
              ],
              "summary": "更新管理员",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "管理员ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  },
                  {
                      "description": "更新的管理员信息",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.UpdateAdminRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "delete": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "删除指定ID的管理员用户",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Admin"
              ],
              "summary": "删除管理员",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "管理员ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/api/rtc/call": {
          "post": {
              "description": "Initiate a video call between a device and a resident",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "RTC"
              ],
              "summary": "Start Video Call",
              "parameters": [
                  {
                      "description": "Call request parameters",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.CallRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/api/rtc/token": {
          "post": {
              "description": "Get a RTC token for real-time communication",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "RTC"
              ],
              "summary": "Get RTC Token",
              "parameters": [
                  {
                      "description": "Token request parameters",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.TokenRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/auth/login": {
          "post": {
              "description": "Process user login and return JWT token with different permissions based on user role",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Auth"
              ],
              "summary": "User Login",
              "parameters": [
                  {
                      "description": "Login request parameters",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.LoginRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success response with token",
                      "schema": {
                          "allOf": [
                              {
                                  "$ref": "#/definitions/controllers.LoginResponse"
                              },
                              {
                                  "type": "object",
                                  "properties": {
                                      "data": {
                                          "$ref": "#/definitions/controllers.LoginData"
                                      }
                                  }
                              }
                          ]
                      }
                  },
                  "400": {
                      "description": "Bad request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "401": {
                      "description": "Unauthorized",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal server error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get a list of all call records in the system, with pagination",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Get Call Records",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Page number, default is 1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "Items per page, default is 10",
                      "name": "page_size",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records/device/{deviceId}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get call records for a specific device, with pagination",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Get Device Call Records",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Device ID",
                      "name": "deviceId",
                      "in": "path",
                      "required": true
                  },
                  {
                      "type": "integer",
                      "description": "Page number, default is 1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "Items per page, default is 10",
                      "name": "page_size",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records/resident/{residentId}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get call records for a specific resident, with pagination",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Get Resident Call Records",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Resident ID",
                      "name": "residentId",
                      "in": "path",
                      "required": true
                  },
                  {
                      "type": "integer",
                      "description": "Page number, default is 1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "Items per page, default is 10",
                      "name": "page_size",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records/session": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get details of a specific call record by CallID (MQTT session ID)",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Get Call Record By CallID",
              "parameters": [
                  {
                      "type": "string",
                      "description": "Call Session ID (UUID)",
                      "name": "call_id",
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records/statistics": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get call statistics including total, answered, missed, etc.",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Get Call Statistics",
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records/{id}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get details of a specific call record by ID",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Get Call Record By ID",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Call Record ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/call_records/{id}/feedback": {
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Submit quality feedback for a specific call record",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "CallRecord"
              ],
              "summary": "Submit Call Feedback",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Call Record ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  },
                  {
                      "description": "Feedback information",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.CallFeedbackRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/device/status": {
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "设备用于报告在线状态的简单健康检测接口",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "设备健康检测",
              "parameters": [
                  {
                      "description": "设备健康检测请求",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.DeviceHealthRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/devices": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "获取所有设备的列表",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "获取所有设备",
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/models.Device"
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "创建一个新的门禁设备，需要提供设备名称、位置等基本信息，可选择关联物业员工",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "创建新设备",
              "parameters": [
                  {
                      "description": "设备信息：包含名称(必填)、安装位置、状态、关联员工ID列表等",
                      "name": "device",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.DeviceRequestInput"
                      }
                  }
              ],
              "responses": {
                  "201": {
                      "description": "成功创建的设备信息",
                      "schema": {
                          "$ref": "#/definitions/models.Device"
                      }
                  },
                  "400": {
                      "description": "请求参数错误，如缺少必填字段或格式不正确",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "服务器内部错误，可能是数据库操作失败等",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/devices/{id}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "根据ID获取设备信息",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "获取单个设备",
              "parameters": [
                  {
                      "type": "string",
                      "description": "设备ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/models.Device"
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "put": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "根据ID更新设备信息，可以修改名称、位置、状态等属性，也可以重新关联物业员工",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "更新设备信息",
              "parameters": [
                  {
                      "type": "string",
                      "description": "设备ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  },
                  {
                      "description": "设备信息：包含名称、位置、状态等需要更新的字段",
                      "name": "device",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.DeviceRequestInput"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "更新后的设备信息",
                      "schema": {
                          "$ref": "#/definitions/models.Device"
                      }
                  },
                  "400": {
                      "description": "请求参数错误，如ID格式不正确或请求体格式错误",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "设备不存在",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "服务器内部错误，可能是数据库操作失败等",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "delete": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "根据ID删除设备",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "删除设备",
              "parameters": [
                  {
                      "type": "string",
                      "description": "设备ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No Content"
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/devices/{id}/status": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "获取设备的当前状态信息，包括在线状态、最后更新时间等",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "device"
              ],
              "summary": "获取设备状态",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "设备ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "设备状态信息，包含ID、名称、状态、位置、最后在线时间等",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "404": {
                      "description": "设备不存在",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "服务器内部错误，可能是数据库查询失败等",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/emergency/alarm": {
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "触发紧急警报并通知相关人员",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Emergency"
              ],
              "summary": "触发紧急警报",
              "parameters": [
                  {
                      "description": "警报请求参数",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.EmergencyAlarmRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/emergency/contacts": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "获取系统中所有紧急联系人的列表",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Emergency"
              ],
              "summary": "获取紧急联系人",
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/emergency/notify-all": {
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "紧急情况下向所有用户发送通知",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Emergency"
              ],
              "summary": "通知所有用户",
              "parameters": [
                  {
                      "description": "通知请求参数",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.EmergencyNotificationRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/emergency/unlock-all": {
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "紧急情况下解锁系统中的所有门",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Emergency"
              ],
              "summary": "紧急解锁所有门",
              "parameters": [
                  {
                      "description": "解锁请求参数",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.EmergencyUnlockRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/call": {
          "post": {
              "description": "Start a new call via MQTT to all residents associated with the device",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "MQTT"
              ],
              "summary": "Initiate MQTT Call",
              "parameters": [
                  {
                      "description": "Call initiation request",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.InitiateCallRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/controllers.InitiateCallResponse"
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/controller/device": {
          "post": {
              "description": "Process device side call actions (hangup, cancelled)",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "MQTT"
              ],
              "summary": "Handle MQTT Caller Action",
              "parameters": [
                  {
                      "description": "Device call action request",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.CallActionRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/controller/resident": {
          "post": {
              "description": "Process resident side call actions (answered, rejected, hangup, timeout)",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "MQTT"
              ],
              "summary": "Handle MQTT Callee Action",
              "parameters": [
                  {
                      "description": "Resident call action request",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.CallActionRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/device/status": {
          "post": {
              "description": "更新设备状态信息，包括在线状态、电池电量和其他自定义属性，无需MQTT连接",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Device"
              ],
              "summary": "Update Device Status",
              "parameters": [
                  {
                      "description": "设备状态信息：包含设备ID、在线状态、电池电量等",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.PublishDeviceStatusRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "成功响应，包含更新后的设备状态信息",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "请求参数错误",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "设备不存在",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "服务器内部错误",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/end-session": {
          "post": {
              "description": "Forcefully end a call session and notify all parties",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "MQTT"
              ],
              "summary": "End MQTT Call Session",
              "parameters": [
                  {
                      "description": "End call session request",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.EndCallSessionRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/session": {
          "get": {
              "description": "Retrieve call session information with TRTC details",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "MQTT"
              ],
              "summary": "Get MQTT Call Session",
              "parameters": [
                  {
                      "type": "string",
                      "description": "Call session ID",
                      "name": "call_id",
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/controllers.CallSessionResponse"
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/mqtt/system/message": {
          "post": {
              "description": "Publish system message via MQTT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "MQTT"
              ],
              "summary": "Publish System Message",
              "parameters": [
                  {
                      "description": "System message information",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.PublishSystemMessageRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/residents": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "获取系统中所有居民的列表",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Resident"
              ],
              "summary": "获取居民列表",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "页码，默认为1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "每页条数，默认为10",
                      "name": "page_size",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "401": {
                      "description": "Unauthorized",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "创建新的居民账户，需要关联到特定设备",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Resident"
              ],
              "summary": "创建居民",
              "parameters": [
                  {
                      "description": "居民信息 - 姓名、电话和设备ID为必填，邮箱可选",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.ResidentRequest"
                      }
                  }
              ],
              "responses": {
                  "201": {
                      "description": "成功响应，包含创建的居民详情",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "请求错误，设备不存在或电话号码已被使用",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "服务器错误",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/residents/{id}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "根据ID获取特定居民的详细信息",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Resident"
              ],
              "summary": "获取居民详情",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "居民ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "put": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "更新现有居民的信息",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Resident"
              ],
              "summary": "更新居民",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "居民ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  },
                  {
                      "description": "更新的居民信息",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.UpdateResidentRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "delete": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "删除指定ID的居民",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Resident"
              ],
              "summary": "删除居民",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "居民ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/staffs": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get a list of all property staff members, with pagination and search support",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Staff"
              ],
              "summary": "Get Property Staff List",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Page number, default is 1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "Items per page, default is 10",
                      "name": "page_size",
                      "in": "query"
                  },
                  {
                      "type": "string",
                      "description": "Search keyword for name, phone, etc.",
                      "name": "search",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "post": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Create a new property staff member",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Staff"
              ],
              "summary": "Create Property Staff",
              "parameters": [
                  {
                      "description": "Property staff information",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.CreateStaffRequest"
                      }
                  }
              ],
              "responses": {
                  "201": {
                      "description": "Created",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/staffs/with-devices": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get a list of all property staff members with their associated devices",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Staff"
              ],
              "summary": "Get Property Staff List With Devices",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Page number, default is 1",
                      "name": "page",
                      "in": "query"
                  },
                  {
                      "type": "integer",
                      "description": "Items per page, default is 10",
                      "name": "page_size",
                      "in": "query"
                  },
                  {
                      "type": "string",
                      "description": "Search keyword for name, phone, etc.",
                      "name": "search",
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/staffs/{id}": {
          "get": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Get details of a specific property staff member by ID",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Staff"
              ],
              "summary": "Get Property Staff By ID",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Property Staff ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "put": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Update an existing property staff member",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Staff"
              ],
              "summary": "Update Property Staff",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Property Staff ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  },
                  {
                      "description": "Updated property staff information",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.UpdateStaffRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          },
          "delete": {
              "security": [
                  {
                      "BearerAuth": []
                  }
              ],
              "description": "Delete a property staff member with the specified ID",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "Staff"
              ],
              "summary": "Delete Property Staff",
              "parameters": [
                  {
                      "type": "integer",
                      "description": "Property Staff ID",
                      "name": "id",
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/trtc/call": {
          "post": {
              "description": "Initiate a Tencent Cloud video call between a device and a resident",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "TencentRTC"
              ],
              "summary": "Start Tencent Video Call",
              "parameters": [
                  {
                      "description": "Call request parameters",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.TencentCallRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      },
      "/trtc/usersig": {
          "post": {
              "description": "Get a UserSig credential for Tencent Cloud real-time communication",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "tags": [
                  "TencentRTC"
              ],
              "summary": "Get Tencent TRTC UserSig",
              "parameters": [
                  {
                      "description": "UserSig request parameters",
                      "name": "request",
                      "in": "body",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/controllers.GetUserSigRequest"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "object",
                          "additionalProperties": true
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  },
                  "500": {
                      "description": "Internal Server Error",
                      "schema": {
                          "$ref": "#/definitions/controllers.ErrorResponse"
                      }
                  }
              }
          }
      }
  },
  "definitions": {
      "controllers.CallActionRequest": {
          "type": "object",
          "required": [
              "call_info"
          ],
          "properties": {
              "call_info": {
                  "$ref": "#/definitions/controllers.CallInfo"
              }
          }
      },
      "controllers.CallFeedbackRequest": {
          "type": "object",
          "required": [
              "rating"
          ],
          "properties": {
              "comment": {
                  "description": "可选评论",
                  "type": "string",
                  "example": "通话质量良好，声音清晰"
              },
              "issues": {
                  "description": "问题描述",
                  "type": "string",
                  "example": "偶尔有一点延迟"
              },
              "rating": {
                  "description": "1-5 星评分",
                  "type": "integer",
                  "maximum": 5,
                  "minimum": 1,
                  "example": 4
              }
          }
      },
      "controllers.CallInfo": {
          "type": "object",
          "required": [
              "action",
              "call_id"
          ],
          "properties": {
              "action": {
                  "type": "string",
                  "example": "answered"
              },
              "call_id": {
                  "type": "string",
                  "example": "call-20250510-abcdef123456"
              },
              "reason": {
                  "type": "string",
                  "example": "user_busy"
              },
              "timestamp": {
                  "type": "integer",
                  "example": 1651234567890
              }
          }
      },
      "controllers.CallRequest": {
          "type": "object",
          "required": [
              "device_id",
              "resident_id"
          ],
          "properties": {
              "device_id": {
                  "type": "string"
              },
              "resident_id": {
                  "type": "string"
              }
          }
      },
      "controllers.CallSessionResponse": {
          "type": "object",
          "properties": {
              "call_id": {
                  "type": "string",
                  "example": "call-20250510-abcdef123456"
              },
              "device_id": {
                  "type": "string",
                  "example": "1"
              },
              "last_activity": {
                  "type": "string",
                  "example": "2025-05-10T15:09:10Z"
              },
              "resident_id": {
                  "type": "string",
                  "example": "2"
              },
              "start_time": {
                  "type": "string",
                  "example": "2025-05-10T15:04:05Z"
              },
              "status": {
                  "type": "string",
                  "example": "connected"
              },
              "tencen_rtc": {
                  "$ref": "#/definitions/controllers.TRTCInfo"
              }
          }
      },
      "controllers.CreateAdminRequest": {
          "type": "object",
          "required": [
              "email",
              "password",
              "phone",
              "username"
          ],
          "properties": {
              "email": {
                  "type": "string",
                  "example": "admin@example.com"
              },
              "password": {
                  "type": "string",
                  "example": "Admin@123"
              },
              "phone": {
                  "type": "string",
                  "example": "13800138000"
              },
              "username": {
                  "type": "string",
                  "example": "admin123"
              }
          }
      },
      "controllers.CreateStaffRequest": {
          "type": "object",
          "required": [
              "password",
              "phone",
              "role",
              "username"
          ],
          "properties": {
              "device_ids": {
                  "description": "关联的设备ID列表",
                  "type": "array",
                  "items": {
                      "type": "integer"
                  },
                  "example": [
                      1,
                      2,
                      3
                  ]
              },
              "name": {
                  "description": "注意: 已从模型中移除，但保留请求结构以兼容前端",
                  "type": "string",
                  "example": "王物业"
              },
              "password": {
                  "type": "string",
                  "example": "Property@123"
              },
              "phone": {
                  "type": "string",
                  "example": "13700001234"
              },
              "position": {
                  "type": "string",
                  "example": "物业经理"
              },
              "property_name": {
                  "type": "string",
                  "example": "阳光花园小区"
              },
              "remark": {
                  "type": "string",
                  "example": "负责A区日常管理工作"
              },
              "role": {
                  "description": "可选值: manager, staff, security",
                  "type": "string",
                  "example": "manager"
              },
              "status": {
                  "description": "可选值: active, inactive, suspended",
                  "type": "string",
                  "example": "active"
              },
              "username": {
                  "type": "string",
                  "example": "wangwuye"
              }
          }
      },
      "controllers.DeviceHealthRequest": {
          "type": "object",
          "required": [
              "device_id"
          ],
          "properties": {
              "device_id": {
                  "type": "string",
                  "example": "1"
              }
          }
      },
      "controllers.DeviceRequestInput": {
          "type": "object",
          "required": [
              "name",
              "serial_number"
          ],
          "properties": {
              "location": {
                  "type": "string",
                  "example": "小区北门入口"
              },
              "name": {
                  "type": "string",
                  "example": "门禁1号"
              },
              "serial_number": {
                  "type": "string",
                  "example": "SN12345678"
              },
              "staff_ids": {
                  "type": "array",
                  "items": {
                      "type": "integer"
                  },
                  "example": [
                      1,
                      2,
                      3
                  ]
              },
              "status": {
                  "type": "string",
                  "example": "online"
              }
          }
      },
      "controllers.DeviceStatusRequest": {
          "type": "object",
          "required": [
              "device_id"
          ],
          "properties": {
              "battery": {
                  "type": "integer",
                  "example": 85
              },
              "device_id": {
                  "type": "integer",
                  "example": 1
              },
              "properties": {
                  "type": "object",
                  "additionalProperties": true
              },
              "status": {
                  "type": "string",
                  "example": "online"
              }
          }
      },
      "controllers.EmergencyAlarmRequest": {
          "type": "object",
          "required": [
              "location",
              "property_id",
              "type"
          ],
          "properties": {
              "description": {
                  "type": "string",
                  "example": "火灾警报被触发，疑似厨房起火"
              },
              "location": {
                  "type": "string",
                  "example": "Building A, Floor 3"
              },
              "property_id": {
                  "description": "物业ID",
                  "type": "integer",
                  "example": 1
              },
              "reported_by": {
                  "description": "报告人ID",
                  "type": "integer",
                  "example": 1
              },
              "type": {
                  "description": "如：fire(火灾)、intrusion(入侵)、medical(医疗)等",
                  "type": "string",
                  "example": "fire"
              }
          }
      },
      "controllers.EmergencyNotificationRequest": {
          "type": "object",
          "required": [
              "content",
              "severity",
              "title"
          ],
          "properties": {
              "content": {
                  "type": "string",
                  "example": "A栋3楼发生火灾，请所有居民立即疏散。"
              },
              "expires_at": {
                  "description": "可选，不提供则默认24小时",
                  "type": "string",
                  "example": "2023-07-01T15:00:00Z"
              },
              "is_public": {
                  "description": "是否为公开通知",
                  "type": "boolean",
                  "example": false
              },
              "property_id": {
                  "description": "关联的物业ID，可以为空表示全局通知",
                  "type": "integer",
                  "example": 1
              },
              "severity": {
                  "description": "high, medium, low",
                  "type": "string",
                  "example": "high"
              },
              "target_type": {
                  "description": "all, residents, staff",
                  "type": "string",
                  "example": "all"
              },
              "title": {
                  "type": "string",
                  "example": "紧急通知：小区火灾警报"
              }
          }
      },
      "controllers.EmergencyUnlockRequest": {
          "type": "object",
          "required": [
              "reason"
          ],
          "properties": {
              "reason": {
                  "type": "string",
                  "example": "火灾疏散"
              }
          }
      },
      "controllers.EndCallSessionRequest": {
          "type": "object",
          "required": [
              "call_id"
          ],
          "properties": {
              "call_id": {
                  "type": "string",
                  "example": "call-20250510-abcdef123456"
              },
              "reason": {
                  "type": "string",
                  "example": "call_completed"
              }
          }
      },
      "controllers.ErrorResponse": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "integer",
                  "example": 401
              },
              "data": {},
              "message": {
                  "type": "string",
                  "example": "Invalid username or password"
              }
          }
      },
      "controllers.GetUserSigRequest": {
          "type": "object",
          "required": [
              "user_id"
          ],
          "properties": {
              "user_id": {
                  "type": "string",
                  "example": "user123"
              }
          }
      },
      "controllers.InitiateCallRequest": {
          "type": "object",
          "required": [
              "device_device_id"
          ],
          "properties": {
              "device_device_id": {
                  "type": "string",
                  "example": "1"
              },
              "timestamp": {
                  "type": "integer",
                  "example": 1651234567890
              }
          }
      },
      "controllers.InitiateCallResponse": {
          "type": "object",
          "properties": {
              "call_id": {
                  "type": "string",
                  "example": "call-20250510-abcdef123456"
              },
              "call_info": {
                  "$ref": "#/definitions/controllers.CallInfo"
              },
              "device_device_id": {
                  "type": "string",
                  "example": "1"
              },
              "target_resident_ids": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "example": [
                      "[\"2\"",
                      "\"3\"]"
                  ]
              },
              "tencen_rtc": {
                  "$ref": "#/definitions/controllers.TRTCInfo"
              },
              "timestamp": {
                  "type": "integer",
                  "example": 1651234567890
              }
          }
      },
      "controllers.LoginData": {
          "type": "object",
          "properties": {
              "created_at": {
                  "type": "string",
                  "example": "2023-01-01T00:00:00Z"
              },
              "role": {
                  "type": "string",
                  "example": "admin"
              },
              "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              },
              "user_id": {
                  "type": "integer",
                  "example": 1
              },
              "username": {
                  "type": "string",
                  "example": "admin"
              }
          }
      },
      "controllers.LoginRequest": {
          "type": "object",
          "required": [
              "password",
              "username"
          ],
          "properties": {
              "password": {
                  "type": "string",
                  "example": "admin123"
              },
              "username": {
                  "type": "string",
                  "example": "admin"
              }
          }
      },
      "controllers.LoginResponse": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "integer",
                  "example": 0
              },
              "data": {},
              "message": {
                  "type": "string",
                  "example": "Login successful"
              }
          }
      },
      "controllers.PublishDeviceStatusRequest": {
          "type": "object",
          "properties": {
              "battery": {
                  "type": "integer",
                  "example": 85
              },
              "device_id": {
                  "type": "string",
                  "example": "1"
              },
              "online": {
                  "type": "boolean",
                  "example": true
              },
              "properties": {
                  "type": "object",
                  "additionalProperties": true
              }
          }
      },
      "controllers.PublishSystemMessageRequest": {
          "type": "object",
          "required": [
              "level",
              "message",
              "type"
          ],
          "properties": {
              "data": {
                  "type": "object",
                  "additionalProperties": true
              },
              "level": {
                  "type": "string",
                  "example": "info"
              },
              "message": {
                  "type": "string",
                  "example": "系统将于今晚22:00进行升级维护"
              },
              "timestamp": {
                  "type": "integer",
                  "example": 1651234567890
              },
              "type": {
                  "type": "string",
                  "example": "notification"
              }
          }
      },
      "controllers.ResidentRequest": {
          "type": "object",
          "required": [
              "device_id",
              "name",
              "phone"
          ],
          "properties": {
              "device_id": {
                  "type": "integer",
                  "example": 101
              },
              "email": {
                  "type": "string",
                  "example": "zhangsan@resident.com"
              },
              "name": {
                  "type": "string",
                  "example": "张三"
              },
              "phone": {
                  "type": "string",
                  "example": "13812345678"
              }
          }
      },
      "controllers.TRTCInfo": {
          "type": "object",
          "properties": {
              "room_id": {
                  "type": "string",
                  "example": "call_room_12345"
              },
              "room_id_type": {
                  "type": "string",
                  "example": "string"
              },
              "sdk_app_id": {
                  "type": "integer",
                  "example": 1400000001
              },
              "user_id": {
                  "type": "string",
                  "example": "device_1"
              },
              "user_sig": {
                  "type": "string",
                  "example": "eJwtzM1Og0AUhmG..."
              }
          }
      },
      "controllers.TencentCallRequest": {
          "type": "object",
          "required": [
              "device_id",
              "resident_id"
          ],
          "properties": {
              "device_id": {
                  "type": "string"
              },
              "resident_id": {
                  "type": "string"
              }
          }
      },
      "controllers.TokenRequest": {
          "type": "object",
          "required": [
              "channel_id",
              "user_id"
          ],
          "properties": {
              "channel_id": {
                  "type": "string",
                  "example": "room123"
              },
              "user_id": {
                  "type": "string",
                  "example": "user456"
              }
          }
      },
      "controllers.UpdateAdminRequest": {
          "type": "object",
          "properties": {
              "email": {
                  "type": "string",
                  "example": "admin@example.com"
              },
              "password": {
                  "type": "string",
                  "example": "NewPassword@123"
              },
              "phone": {
                  "type": "string",
                  "example": "13800138000"
              }
          }
      },
      "controllers.UpdateResidentRequest": {
          "type": "object",
          "properties": {
              "device_id": {
                  "type": "integer",
                  "example": 102
              },
              "email": {
                  "type": "string",
                  "example": "lisi@resident.com"
              },
              "name": {
                  "type": "string",
                  "example": "李四"
              },
              "phone": {
                  "type": "string",
                  "example": "13987654321"
              }
          }
      },
      "controllers.UpdateStaffRequest": {
          "type": "object",
          "properties": {
              "device_ids": {
                  "description": "更新关联的设备ID列表",
                  "type": "array",
                  "items": {
                      "type": "integer"
                  },
                  "example": [
                      1,
                      3,
                      5
                  ]
              },
              "name": {
                  "type": "string",
                  "example": "李物业"
              },
              "password": {
                  "type": "string",
                  "example": "NewProperty@456"
              },
              "phone": {
                  "type": "string",
                  "example": "13700005678"
              },
              "position": {
                  "type": "string",
                  "example": "前台客服"
              },
              "property_name": {
                  "type": "string",
                  "example": "幸福家园小区"
              },
              "remark": {
                  "type": "string",
                  "example": "负责接待访客和处理居民投诉"
              },
              "role": {
                  "description": "可选值: manager, staff, security",
                  "type": "string",
                  "example": "staff"
              },
              "status": {
                  "description": "可选值: active, inactive, suspended",
                  "type": "string",
                  "example": "active"
              },
              "username": {
                  "type": "string",
                  "example": "liwuye"
              }
          }
      },
      "models.AccessLog": {
          "type": "object",
          "properties": {
              "device": {
                  "description": "Relations",
                  "allOf": [
                      {
                          "$ref": "#/definitions/models.Device"
                      }
                  ]
              },
              "device_id": {
                  "type": "integer"
              },
              "id": {
                  "type": "integer"
              },
              "method": {
                  "$ref": "#/definitions/models.AccessMethod"
              },
              "resident": {
                  "$ref": "#/definitions/models.Resident"
              },
              "resident_id": {
                  "type": "integer"
              },
              "result": {
                  "$ref": "#/definitions/models.AccessResult"
              },
              "timestamp": {
                  "type": "string"
              }
          }
      },
      "models.AccessMethod": {
          "type": "string",
          "enum": [
              "remote",
              "code",
              "face",
              "fingerprint"
          ],
          "x-enum-varnames": [
              "AccessMethodRemote",
              "AccessMethodCode",
              "AccessMethodFace",
              "AccessMethodFingerprint"
          ]
      },
      "models.AccessResult": {
          "type": "string",
          "enum": [
              "success",
              "failure"
          ],
          "x-enum-varnames": [
              "AccessResultSuccess",
              "AccessResultFailure"
          ]
      },
      "models.CallRecord": {
          "type": "object",
          "properties": {
              "call_id": {
                  "description": "通话的UUID，用于关联MQTT通话会话",
                  "type": "string"
              },
              "call_status": {
                  "type": "string"
              },
              "device": {
                  "description": "Relations",
                  "allOf": [
                      {
                          "$ref": "#/definitions/models.Device"
                      }
                  ]
              },
              "device_id": {
                  "type": "integer"
              },
              "duration": {
                  "description": "通话时长",
                  "type": "integer"
              },
              "id": {
                  "type": "integer"
              },
              "resident": {
                  "$ref": "#/definitions/models.Resident"
              },
              "resident_id": {
                  "type": "integer"
              },
              "timestamp": {
                  "description": "通话开始时间",
                  "type": "string"
              }
          }
      },
      "models.Device": {
          "type": "object",
          "properties": {
              "access_logs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.AccessLog"
                  }
              },
              "call_records": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.CallRecord"
                  }
              },
              "created_at": {
                  "type": "string"
              },
              "emergency_logs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.EmergencyLog"
                  }
              },
              "id": {
                  "type": "integer"
              },
              "location": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "resident": {
                  "$ref": "#/definitions/models.Resident"
              },
              "serial_number": {
                  "description": "设备序列号，唯一标识",
                  "type": "string"
              },
              "staff": {
                  "description": "Relations - 多对多关系",
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.PropertyStaff"
                  }
              },
              "status": {
                  "$ref": "#/definitions/models.DeviceStatus"
              },
              "updated_at": {
                  "type": "string"
              }
          }
      },
      "models.DeviceStatus": {
          "type": "string",
          "enum": [
              "online",
              "offline",
              "fault"
          ],
          "x-enum-varnames": [
              "DeviceStatusOnline",
              "DeviceStatusOffline",
              "DeviceStatusFault"
          ]
      },
      "models.EmergencyLog": {
          "type": "object",
          "properties": {
              "device": {
                  "description": "Relations",
                  "allOf": [
                      {
                          "$ref": "#/definitions/models.Device"
                      }
                  ]
              },
              "device_id": {
                  "type": "integer"
              },
              "id": {
                  "type": "integer"
              },
              "resident": {
                  "$ref": "#/definitions/models.Resident"
              },
              "resident_id": {
                  "type": "integer"
              },
              "resolved_at": {
                  "description": "可空字段",
                  "type": "string"
              },
              "status": {
                  "$ref": "#/definitions/models.EmergencyStatus"
              },
              "triggered_at": {
                  "type": "string"
              }
          }
      },
      "models.EmergencyStatus": {
          "type": "string",
          "enum": [
              "pending",
              "responded",
              "escalated",
              "resolved"
          ],
          "x-enum-varnames": [
              "EmergencyStatusPending",
              "EmergencyStatusResponded",
              "EmergencyStatusEscalated",
              "EmergencyStatusResolved"
          ]
      },
      "models.PropertyStaff": {
          "type": "object",
          "properties": {
              "created_at": {
                  "type": "string"
              },
              "devices": {
                  "description": "关联关系 - 使用多对多关系替代直接关联",
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.Device"
                  }
              },
              "id": {
                  "type": "integer"
              },
              "phone": {
                  "type": "string"
              },
              "position": {
                  "type": "string"
              },
              "property_name": {
                  "type": "string"
              },
              "remark": {
                  "type": "string"
              },
              "role": {
                  "description": "manager, staff, etc.",
                  "type": "string"
              },
              "status": {
                  "type": "string"
              },
              "updated_at": {
                  "type": "string"
              },
              "username": {
                  "type": "string"
              }
          }
      },
      "models.Resident": {
          "type": "object",
          "properties": {
              "access_logs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.AccessLog"
                  }
              },
              "call_records": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.CallRecord"
                  }
              },
              "created_at": {
                  "type": "string"
              },
              "device": {
                  "description": "Relations",
                  "allOf": [
                      {
                          "$ref": "#/definitions/models.Device"
                      }
                  ]
              },
              "device_id": {
                  "description": "One-to-one relationship with Device",
                  "type": "integer"
              },
              "email": {
                  "type": "string"
              },
              "emergency_logs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/models.EmergencyLog"
                  }
              },
              "id": {
                  "type": "integer"
              },
              "name": {
                  "type": "string"
              },
              "phone": {
                  "type": "string"
              },
              "updated_at": {
                  "type": "string"
              }
          }
      }
  },
  "securityDefinitions": {
      "BearerAuth": {
          "description": "Enter the token with the `Bearer: ` prefix",
          "type": "apiKey",
          "name": "Authorization",
          "in": "header"
      }
  },
  "security": [
      {
          "BearerAuth": []
      }
  ]
}